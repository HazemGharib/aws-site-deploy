name: CI

on:
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code 🛎
        uses: actions/checkout@v3
      - name: Set up pnpm 🛠
        uses: pnpm/action-setup@v3
        with:
          version: 8
      - name: Cache pnpm modules 💾
        uses: actions/cache@v2
        with:
          path: |
            ~/.pnpm-store
            **/node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - name: Set up AWS CLI 🛠
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'ap-southeast-1'
      - name: Deploy CloudFormation stack 🚀
        run: |
          aws cloudformation deploy --template-file ./stack.yml --stack-name hazem-testing-stack --capabilities CAPABILITY_IAM
          echo "Domain Name: $(aws cloudformation describe-stacks --stack-name hazem-testing-stack --query "Stacks[0].Outputs[?OutputKey=='StaticWebsiteDistributionDomainName'].OutputValue" --output text)"
          echo "Distribution ID: $(aws cloudfront list-distributions --output json | jq '.DistributionList.Items[] | select(.Origins.Items[].DomainName | contains("hazem-testing-bucket.s3"))'.Id)"
      - name: Install front end dependencies 📦
        run: |
          cd client/
          pnpm install
      - name: Build front end package 🏗
        run: |
          cd client/
          pnpm build
      - name: Upload site to S3 🚀
        run: |
          aws s3 sync ./client/build s3://hazem-testing-bucket --delete
      - name: Invalidate CloudFront cache 🧹
        run: |
          aws cloudfront create-invalidation --distribution-id E1M87D8X17UEXP --paths "/*"
      - name: Install back end dependencies 📦
        run: |
          cd api/
          pnpm install
      - name: Upload back end to S3 🚀
        run: |
          cd api/
          zip -r Handler.zip .
          aws s3 cp Handler.zip s3://hazem-testing-api-bucket/api/Handler.zip
      - name: Deploy back end 🚀
        run: |
          aws cloudformation deploy --template-file ./lambda.yml --stack-name hazem-testing-api-stack --capabilities CAPABILITY_NAMED_IAM
          echo "API Gateway URL: $(aws cloudformation describe-stacks --stack-name hazem-testing-api-stack --query "Stacks[0].Outputs[?OutputKey=='ApiUrl'].OutputValue" --output text)"
